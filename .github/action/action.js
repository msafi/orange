!function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=10)}([function(e,t){e.exports=require("@actions/core")},function(e,t){e.exports=require("@actions/github")},function(e,t){e.exports=require("fs-extra")},function(e,t){e.exports=require("@actions/artifact")},function(e,t){e.exports=require("bluebird")},function(e,t){e.exports=require("electron-packager")},function(e,t){e.exports=require("archiver")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("electron-winstaller")},function(e,t){e.exports=require("@actions/exec")},function(e,t,r){"use strict";r.r(t);var a=r(0),n=r(4),o=r(3),c=r(2),i=r.n(c),s=r(5),l=r(6),u=r(7),p=r(8),f=r(1),g=r(9);const d=async(e,t)=>{await Object(g.exec)(e,null,{ignoreReturnCode:!0})>0&&a.setFailed(t)},b=/^([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/,m=()=>{const e=(()=>{const e=f.context.ref;return e.substr("refs/tags/".length,e.length)})();return t=e,b.test(t)?e:`0.0.0-${f.context.sha.substr(0,10)}`;var t},w=o.create(),x=m(),v={"macos-latest":{electronPackagerPlatform:"darwin",archiveName:`Orange-v${x}-macOS.zip`},"ubuntu-latest":{electronPackagerPlatform:"linux",archiveName:`Orange-v${x}-Linux.zip`},"windows-latest":{electronPackagerPlatform:"win32",archiveName:`Orange-v${x}-Windows.exe`}};n.try(async()=>{const e=a.getInput("command");if(e)return await d(e,`\`${e}\` failed!`);const t=a.getInput("task");return"create-executable"===t?await(async()=>{console.log("Building source code..."),await d("npm run build","`npm run build` failed");const e=a.getInput("os",{required:!0}),{archiveName:t,electronPackagerPlatform:r}=v[e];console.log(`Creating Electron package on ${e}...`),await s({arch:"x64",dir:"artifacts/webpack",out:"artifacts/electronPackager",icon:"src/assets/orange",overwrite:!0,platform:r,prune:!1,appVersion:m()}),"macos-latest"===e?(console.log("Compressing Electron package..."),await new Promise(n=>{const o=l("zip",{zlib:{level:9}}),c=i.a.createWriteStream(`artifacts/electronPackager/${t}`);o.pipe(c),o.directory(`artifacts/electronPackager/Orange-${r}-x64/`,!1),c.on("close",n),o.on("error",t=>{console.error(t),a.setFailed(`Could not create a zip archive on ${e}`)}),o.finalize()})):"windows-latest"===e&&(console.log(`Creating ${t}...`),await p.createWindowsInstaller({appDirectory:`artifacts/electronPackager/Orange-${r}-x64`,outputDirectory:"artifacts/electronPackager",authors:"https://github.com/orange-org",exe:"Orange.exe",setupExe:t,version:x})),console.log(`Uploading ${t}...`),await w.uploadArtifact(Object(u.basename)(t),[`artifacts/electronPackager/${t}`],"artifacts/electronPackager")})():"draft-release"===t?await(async()=>{try{const e=new f.GitHub(a.getInput("githubToken")),{owner:t,repo:r}=f.context.repo,n=m();console.log("Creating GitHub release...");const c=await e.repos.createRelease({owner:t,repo:r,tag_name:n,name:`Orange v${n}`,draft:!0}),{data:{upload_url:s}}=c,l=o.create();console.log("Downloading build artifacts...");const u=await l.downloadAllArtifacts();for(let t of u){const{downloadPath:r,artifactName:a}=t,n=`${r}/${a}`;console.log(`Uploading release asset ${a}...`),await e.repos.uploadReleaseAsset({url:s,headers:{"content-type":"application/zip","content-length":i.a.statSync(n).size},name:a,file:i.a.readFileSync(n)})}}catch(e){a.setFailed(e.message)}})():void 0}).catch(e=>a.setFailed(e.toString()))}]);